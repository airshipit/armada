# Copyright 2019, AT&T Intellectual Property
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

- hosts: primary
  roles:
    - clear-firewall
    - bindep
    - disable-systemd-resolved
    - ensure-python
    - ensure-pip
    - ensure-docker

  tasks:

    - name: Clone Required Repositories
      shell: |
        export CLONE_ARMADA={{ CLONE_ARMADA }}
        export OSH_INFRA_COMMIT={{ OSH_INFRA_COMMIT }}
        ./tools/deployment/airskiff/developer/000-clone-dependencies.sh
      args:
        chdir: "{{ zuul.projects['opendev.org/airship/treasuremap'].src_dir }}"

    - name: Setup Apparmor
      shell: |
        ./tools/deployment/airskiff/developer/009-setup-apparmor.sh
      args:
        chdir: "{{ zuul.projects['opendev.org/airship/treasuremap'].src_dir }}"

    - name: Deploy Kubernetes with Minikube
      shell: |
        ./tools/deployment/airskiff/developer/010-deploy-k8s.sh
      args:
        chdir: "{{ zuul.projects['opendev.org/airship/treasuremap'].src_dir }}"

    - name: Build Armada with submitted changes
      shell: |
        set -ex
        export DISTRO={{ ARMADA_IMAGE_DISTRO }}
        make images
        if test "${DISTRO}" = 'ubuntu_bionic'
        then
          # this trick is needed to use bionic image instead of focal in airskiff deployment test
          docker tag quay.io/airshipit/armada:latest-ubuntu_bionic quay.io/airshipit/armada:latest-ubuntu_focal
        fi
      args:
        chdir: "{{ zuul.project.src_dir }}"
      become: yes

    - name: Build all charts locally
      shell: |
        set -ex
        ./tools/deployment/airskiff/developer/015-make-all-charts.sh
      args:
        chdir: "{{ zuul.projects['opendev.org/airship/treasuremap'].src_dir }}"
      become: yes

    - name: Deploy Airship components using Armada
      shell: |
        mkdir -p ~/.kube
        cp -rp /home/zuul/.kube/config ~/.kube/config
        ./tools/deployment/airskiff/developer/030-armada-bootstrap.sh
      args:
        chdir: "{{ zuul.projects['opendev.org/airship/treasuremap'].src_dir }}"
      become: yes

    - name: Deploy Memcached using Airship
      shell: |
        ./tools/deployment/airskiff/developer/100-deploy-osh.sh
      args:
        chdir: "{{ zuul.projects['opendev.org/airship/treasuremap'].src_dir }}"
      become: yes

    - name: Wait for deployment completion
      shell: |
        ./tools/gate/wait-for-shipyard.sh
      args:
        chdir: "{{ zuul.projects['opendev.org/airship/treasuremap'].src_dir }}"
      become: yes
